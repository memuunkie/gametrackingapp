@model PingPong.Models.SingleGame

@{
    ViewBag.Title = "CreateSingle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateSingle</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SingleGame</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Game Select", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="radio" name="game" value="single" checked> Singles Game
                <input type="radio" name="game" value="team"> Team Game
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label("Player 1 Select", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(modelItem => Model.Player1.Id,
                    new SelectList(Model.Players, "Id", "FirstName"),
                    "Select Player",
                    new { htmlAttributes = new { @class = "form-control"}})
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Player1.Id, "Player 1 Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Player1.Id, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Player1.Id, "", new {@class = "text-danger"})
            </div>
        </div>*@
        
        <div class="form-group">
            @Html.Label("Player 2 Select", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(modelItem => Model.Player2.Id,
                    new SelectList(Model.Players, "Id", "FirstName"),
                    "Select Player",
                    new { htmlAttributes = new { @class = "form-control"}})
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Player2.Id, "Player 2 Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Player2.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Player2.Id, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Player1Score, "Player 1 Score", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Player1Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Player1Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player2Score, "Player 2 Score", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Player2Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Player2Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
